/* body {min-width: fit-content} */
header {
    /* figma 1920(full) 1920px(x) 100%(o) */
    /* width:100%;(기본값) */
    /* min-width(320~360px), max-width(100%) */
    display: flex;
    flex-flow: row nowrap; /* 아이템(자식)의 정렬 방향 row */
    align-items: center; /* 교차축(수직) 정렬 */
    justify-content: space-between; /* 메인축 양쪽 끝 정렬 */
    min-width: 360px;
    height: 80px;
    padding: 0 16px;
    background-color: #000;
}
header h1 {
    /* img태그가 들어가는 부모요소에 크기 입력 시 꼭 필요한 경우가 아니면 
    width, height 둘다 입력하지 않고 width값만 입력하여 height값은 비율에 맞게 자동으로 설정되게 처리한다. 
    ex) height:auto */
    width: 301px;
}
header h1 a {}
header h1 a img {
    /* img태그는 inline태그여도 원본 이미지 px고유값을 가지고 있기 때문에 부모의 크기가 변경되도 상대값으로 따라가지 않는다 */
    width: 100%;
}
header nav {}
header nav a {
    margin-right: 24px;
    font-size: 1.25rem;
    color: #fff;
}
header nav a:last-child {margin: 0;}
/* a 상태선택자 */
header nav a:hover {color: #bbb;}

header .snb {
    display: flex;
    align-items: center;
}
header .snb a:first-child {
    margin-right: 24px;
    padding: 0 10px;
    line-height: 39px;
    border: 2px solid #fff;
    border-radius: 5px;
    color: #fff;
}
header .snb a:first-child:hover {
    color: #bbb;
    border-color: #bbb;
}
header .snb a:last-child {
    width: 36px;
    /* display:inline-block; 부모가 flex 설정되면 생략가능 */
}
header .snb a img {
    filter: invert(100%);
    width: 100%;
}
header .snb a:last-child:hover img {
    filter:invert(100%) opacity(70%);
}
/* ==============main. 영상, 시작하기 버튼 위치 */
main {}
main section {
    margin-bottom: 150px;
    position: relative;
    overflow: hidden;
    height: 720px;
}
main section video {width: 100%;}
main section .main_visual {
    width: 100%;
    position: absolute;
    /* 겹치는 형제요소 디자인작업을 위한 absolute */
    /* 1. 겹치는 대상에 absolute 설정 후 부모확인을 위해 left:0; top:0; 초기값 설정(부모의 왼쪽위로 배치) */
    /* 2. 배치된 위치가 원하는 부모 위치가 아닐 때 -> 원하는 부모 대상에 position 추가 속성을 이용해서 부모설정하기 */
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}
main section .main_visual h2 {
    margin-bottom: 60px;
    text-align: center;
    color: #fff;
    line-height: 1.3;
    font-size: 3rem;
    font-weight: bold;
}
main section .main_visual .start_link {
    display: inline-block;
    padding: 0 50px;
    line-height: 54px;
    border-radius: 10px;
    background-color: #000;
    color: #fff;
}
main section .main_visual .start_link:hover {border-radius: 20px;}
/* ====================2. 크리에이터 */
main .creater {
    margin: 0 auto;
    width: 1300px;
}
main .creater h3 {
    margin-bottom: 55px;
    text-align: center;
    font-size: 3rem;
    font-weight: bold;
}
main .creater .txt {
    margin-bottom: 55px;
    text-align: center;
    font-size: 1.25rem;
    line-height: 1.5;
}
main .creater .img {
    margin: 0 auto 55px;
    width: 697px;
}
main .creater .img img {width: 100%;}
main .creater .creater_list {
    display: flex;
    justify-content: space-between;
    flex-flow: row nowrap;
    text-align: center;
}
main .creater .creater_list li {
    width: calc(100% / 3);
}
main .creater .creater_list li .tit {
    display: block;
    margin-bottom: 10px;
    font-size: 2rem;
    font-weight: bold;
}
main .creater .creater_list li .tit_txt {font-size: 1.25rem;}
